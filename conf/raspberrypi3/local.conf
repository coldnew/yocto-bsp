#
# Where to place downloads
#
# During a first build the system will download many different source code tarballs
# from various upstream projects. This can take a while, particularly if your network
# connection is slow. These are all stored in DL_DIR. When wiping and rebuilding you
# can preserve this directory to speed up this part of subsequent builds. This directory
# is safe to share between multiple builds on the same machine too.
#
# The default is a downloads directory under TOPDIR which is the build directory.
#
DL_DIR ?= "${BSPDIR}/downloads"

#
# Where to place shared-state files
#
# BitBake has the capability to accelerate builds based on previously built output.
# This is done using "shared state" files which can be thought of as cache objects
# and this option determines where those files are placed.
#
# You can wipe out TMPDIR leaving this directory intact and the build would regenerate
# from these files if no changes were made to the configuration. If changes were made
# to the configuration, only shared state files where the state was still valid would
# be used (done using checksums).
#
# The default is a sstate-cache directory under TOPDIR.
#
SSTATE_DIR ?= "${BSPDIR}/sstate-cache"

#
# Where to place the build output
#
# This option specifies where the bulk of the building work should be done and
# where BitBake should place its temporary files and output. Keep in mind that
# this includes the extraction and compilation of many applications and the toolchain
# which can use Gigabytes of hard disk space.
#
# The default is a tmp directory under TOPDIR.
#
#TMPDIR = "${TOPDIR}/tmp"

#
# Default policy config
#
# The distribution setting controls which policy settings are used as defaults.
# The default value is fine for general Yocto project use, at least initially.
# Ultimately when creating custom policy, people will likely end up subclassing
# these defaults.
#
DISTRO = "poky"

#
# As an example of a subclass there is a "bleeding" edge policy configuration
# where many versions are set to the absolute latest code from the upstream
# source control systems. This is just mentioned here as an example, its not
# useful to most new users.
# DISTRO ?= "poky-bleeding"

#
# Package Management configuration
#
# This variable lists which packaging formats to enable. Multiple package backends
# can be enabled at once and the first item listed in the variable will be used
# to generate the root filesystems.
# Options are:
#  - 'package_deb' for debian style deb files
#  - 'package_ipk' for ipk files are used by opkg (a debian style embedded package manager)
#  - 'package_rpm' for rpm style packages
#  - 'package_tar' for tar.gz style package
#
# E.g.: PACKAGE_CLASSES ?= "package_rpm package_deb package_ipk"
# We default to rpm:
PACKAGE_CLASSES ?= "package_ipk"

#
# SDK/ADT target architecture
#
# This variable specifies the architecture to build SDK/ADT items for and means
# you can build the SDK packages for architectures other than the machine you are
# running the build on (i.e. building i686 packages on an x86_64 host).
# Supported values are i686 and x86_64
SDKMACHINE ?= "x86_64"

#
# Buildhistory
#
# Build history is disabled by default. To enable it, add the
# following INHERIT statement and set the BUILDHISTORY_COMMIT variable
# to "1" at the end of your conf/local.conf file found in the Build
# Directory:
#
# NOTE:
# Enabling build history increases your build times slightly,
# particularly for images, and increases the amount of disk space used
# during the build.
#
INHERIT += "buildhistory"
BUILDHISTORY_COMMIT = "1"

## Supporting for debug
EXTRA_IMAGE_FEATURES = " debug-tweaks "

#### Raspberry Pi 3

# Default machine for raspberrypi 3
MACHINE = "raspberrypi3"

# https://meta-raspberrypi.readthedocs.io/en/latest/extra-build-config.html#gpu-memory
GPU_MEM="256"

# omxplayer
#
# omxplayer depends on libav which has a commercial license. So in
# order to be able to compile omxplayer you will need to whiteflag the
# commercial license in your local.conf:
LICENSE_FLAGS_WHITELIST = "commercial"

# No X11 support
DISTRO_FEATURES_remove = " x11 "

## Buld for EGLFS (default)
DISTRO_FEATURES_remove = " wayland vulkan "

## Build for Wayland
#DISTRO_FEATURES_append = " wayland  vulkan "